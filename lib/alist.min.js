<!DOCTYPE html>
<html lang="zh-CN" class="theme-">
<head data-suburl="">
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<title>chuqiuyu/gao - lib/alist.min.js at fd599aefbb199f48ea6cf73c3414629c1c02e50f - Agit</title>
	<meta name="theme-color" content="#6cc644">
	<meta name="author" content="chuqiuyu" />
	<meta name="description" content="gao" />
	<meta name="keywords" content="go,git,self-hosted,gitea">
	<meta name="referrer" content="no-referrer" />
	<meta name="_csrf" content="i0awkC9Bsw5Fd2BzPCblIieMVYA6MTY4MzA3ODQ2NzIyMDU3ODU5Nw" />
	<meta name="_suburl" content="" />
	
	
	

	<script>
		window.config = {
			AppVer: 'gitea模板还原\u002b138-g943c8c71f',
			AppSubUrl: '',
			StaticUrlPrefix: '',
			UseServiceWorker:  true ,
			csrf: 'i0awkC9Bsw5Fd2BzPCblIieMVYA6MTY4MzA3ODQ2NzIyMDU3ODU5Nw',
			HighlightJS: false,
			SimpleMDE: false,
			Tribute: false,
			U2F: false,
			Heatmap: false,
			heatmapUser: null,
			NotificationSettings: {
				MinTimeout:  10000 ,
				TimeoutStep:   10000 ,
				MaxTimeout:  60000 ,
				EventSourceUpdateTime:  10000 ,
			},
			PageIsProjects: false,
      
		};
	</script>
	<link rel="icon" href="/img/favicon.svg" type="image/svg+xml">
	<link rel="alternate icon" href="/img/favicon.png" type="image/png">
	<link rel="mask-icon" href="/img/agit-safari.svg" color="#609926">
	<link rel="fluid-icon" href="/img/agit-lg.png" title="Agit">


	<link rel="stylesheet" href="/css/index.css?v=220846678a86246c9d7e7c46c21f20c2">
	<noscript>
		<style>
      .dropdown:hover > .menu { display: block; }
      .ui.secondary.menu .dropdown.item > .menu { margin-top: 0; }
		</style>
	</noscript>
	<style class="list-search-style"></style>

	
		<meta property="og:title" content="gao" />
		<meta property="og:url" content="https://agit.ai/chuqiuyu/gao" />
		
	
	<meta property="og:type" content="object" />
	
		<meta property="og:image" content="https://agit.ai/user/avatar/chuqiuyu/-1" />
	

<meta property="og:site_name" content="Agit" />


<link rel="stylesheet" href="/vendor/plugins/xterm/xterm.css?v=220846678a86246c9d7e7c46c21f20c2" />


</head>
<body>
	

	<div class="full height">
		<noscript>使用 JavaScript能使本网站更好的工作。</noscript>

		

		
			
			<div class="ui top secondary stackable main menu following bar light" style="background: #242628; height: 52px;">
				
<div class="ui container z-max" id="navbar" v-cloak style="position:fixed;">
	<div class="i-flex i-align-center i-justify-between logo-img" style="margin-right:26px;height:52px;">
		<a href="/">
			<img class="share-nav-logo" src="/img/logo/nav-logo.svg">
		</a>
		<div class="ui basic icon button mobile-only" id="navbar-expand-toggle">
			<i class="sidebar icon"></i>
		</div>
	</div>

	
		<a class="item " href="/">首页</a>
		<a class="item" href="http://help.agit.ai" id="help-header-a" target="_blank">帮助</a>
		<a class="mobile-only item " href="/explore/repos">探索</a>
		<div class="ui input d-relative navbar-search not-mobile" :class="{active:menuVisible}">
			<i class="icon iconfont icon-search"></i>
			<input v-model="searchName" placeholder="搜索" type="text" autocomplete="off"  @focus="menuVisible = true">
			<div v-show="searchName.trim() && menuVisible" class="ui segment transition z-menu" @focus="menuVisible = true">
				<div class="ui list" @click="handleSearch('repos')">
					<span class="mr-md">${searchName}</span> <span class="i-text-right">仓库</span>
				</div>
				<div class="ui list" @click="handleSearch('users')">
					<span class="mr-md">${searchName}</span> <span class="i-text-right">用户</span>
				</div>
				<div class="ui list" @click="handleSearch('organizations')">
					<span class="mr-md">${searchName}</span> <span class="i-text-right">组织</span>
				</div>
			</div>

		</div>
	
	

	


	

<div class="right stackable menu header-right">
	
	<div class="ui dropdown jump item poping up active visible">
		<i class="iconfont mr-3xs font-size-2xl" :class='{"icon-lang-zh2en":lan!=="en-US","icon-lang-en2zh":lan==="en-US"}'></i>
		<span id="footerLang" class="hidden">简体中文</span>
		<i class="caret down icon font-size-sm"></i>
		<div class="menu">
			
			<span lang="zh-CN" class="item active selected" onclick="handleLanguage(&#34;zh-CN&#34;)">简体中文</span>
			
			<span lang="en-US" class="item " onclick="handleLanguage(&#34;en-US&#34;)">English</span>
			
		</div>
	</div>

	
	<a class="item" rel="nofollow" href="/user/login?redirect_to=%2fchuqiuyu%2fgao%2fsrc%2fcommit%2ffd599aefbb199f48ea6cf73c3414629c1c02e50f%2flib%2falist.min.js">
		<svg viewBox="0 0 16 16" class="svg octicon-sign-in" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm6.56 4.5l1.97-1.97a.75.75 0 10-1.06-1.06L6.22 7.47a.75.75 0 000 1.06l3.25 3.25a.75.75 0 101.06-1.06L8.56 8.75h5.69a.75.75 0 000-1.5H8.56z"/></svg> 登录
	</a>
</div>


</div>

			</div>
		


<div id="repoHome" class="repository file list ">
	<div class="header-wrapper">

	<div class="ui container">
		<div class="repo-header">
			<div class="ui huge breadcrumb repo-title">
				
					<div class="repo-header-icon">
	
		
			<svg viewBox="0 0 16 16" class="svg octicon-mirror" width="32" height="32" aria-hidden="true"><path fill-rule="evenodd" d="M8.75 1.75a.75.75 0 00-1.5 0v.5a.75.75 0 001.5 0v-.5zM8 4a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5A.75.75 0 018 4zm.75 3.75a.75.75 0 00-1.5 0v.5a.75.75 0 001.5 0v-.5zM8 10a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5A.75.75 0 018 10zm0 3a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5A.75.75 0 018 13zm7.547-9.939A.75.75 0 0116 3.75v8.5a.75.75 0 01-1.265.545l-4.5-4.25a.75.75 0 010-1.09l4.5-4.25a.75.75 0 01.812-.144zM11.842 8l2.658 2.51V5.49L11.842 8zM0 12.25a.75.75 0 001.265.545l4.5-4.25a.75.75 0 000-1.09l-4.5-4.25A.75.75 0 000 3.75v8.5zm1.5-6.76L4.158 8 1.5 10.51V5.49z"/></svg>
		
	
</div>

				
				<a href="/chuqiuyu">chuqiuyu</a>
				<div class="divider"> / </div>
				<a href="/chuqiuyu/gao">gao</a>

				<i class="iconfont icon-ai"></i>

				
					
						
					
				
				
				<div class="fork-flag">镜像自地址 <a target="_blank" rel="noopener noreferrer" href="https://github.com/gaotianliuyun/gao.git">https://github.com/gaotianliuyun/gao.git</a></div>
				
				
			</div>
			
				<div class="repo-buttons">
					<form method="post" action="/chuqiuyu/gao/action/watch?redirect_to=%2fchuqiuyu%2fgao%2fsrc%2fcommit%2ffd599aefbb199f48ea6cf73c3414629c1c02e50f%2flib%2falist.min.js">
						<input type="hidden" name="_csrf" value="i0awkC9Bsw5Fd2BzPCblIieMVYA6MTY4MzA3ODQ2NzIyMDU3ODU5Nw">
						<div class="ui labeled button poping up" tabindex="0" data-content="请登录后再关注此仓库" data-position="top center" data-variation="tiny">
							<button type="submit" class="ui compact basic button" disabled>
								<i class="iconfont mr-2xs icon-eye"></i>关注
							</button>
							<a class="ui basic label" href="/chuqiuyu/gao/watchers">
								2
							</a>
						</div>
					</form>
					<form method="post" action="/chuqiuyu/gao/action/star?redirect_to=%2fchuqiuyu%2fgao%2fsrc%2fcommit%2ffd599aefbb199f48ea6cf73c3414629c1c02e50f%2flib%2falist.min.js">
						<input type="hidden" name="_csrf" value="i0awkC9Bsw5Fd2BzPCblIieMVYA6MTY4MzA3ODQ2NzIyMDU3ODU5Nw">
						<div class="ui labeled button poping up" tabindex="0" data-content="请登录后再点赞此仓库" data-position="top center" data-variation="tiny">
							<button type="submit" class="ui compact basic button" disabled>
								<i class="mr-2xs iconfont icon-star"></i>点赞
							</button>
							<a class="ui basic label" href="/chuqiuyu/gao/stars">
								0
							</a>
						</div>
					</form>
					
						<div class="ui labeled button " tabindex="0">
							<a class="ui compact basic button
								poping up"
								 data-content="登录并 派生 这个仓库。" rel="nofollow"
									href="/user/login?redirect_to=/repo/fork/5908"
								 data-position="top center" data-variation="tiny">
								<i class="mr-2xs iconfont icon-fork"></i>派生
							</a>
							<a class="ui basic label" href="/chuqiuyu/gao/forks">
								9
							</a>
						</div>
					
				</div>
			
		</div>
	</div>

	<div class="ui tabs container">
		
			<div class="ui tabular stackable menu navbar">
				
				<a class="active item" href="/chuqiuyu/gao/src/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f">
					<i class="iconfont icon-code"></i> 代码
				</a>
				

				
					<a class=" item" href="/chuqiuyu/gao/issues">
						<i class="iconfont icon-open"></i> 讨论 <span class="ui gray tiny label circular">0</span>
					</a>
				

				

				

				
					<a class=" item" href="/chuqiuyu/gao/wiki" >
						<i class="iconfont icon-wiki"></i> 百科
					</a>
				

				
					<a class=" item" href="/chuqiuyu/gao/activity">
						<i class="iconfont icon-activity"></i> 动态
					</a>
				

				


				
			</div>
		
	</div>
	<div class="ui tabs divider"></div>
</div>

	<span class="repo-url hidden">/chuqiuyu/gao</span>
	<span class="repo-id hidden">5908</span>
	<div class="ui container">
		



		<div class="ui repo-description">
			<div id="repo-desc">
				
				<a class="link" href=""></a>
			</div>
			
		</div>
		<div class="ui" id="repo-topics">
		
		
		</div>
		
		<div class="hide" id="validate_prompt">
			<span id="count_prompt">您最多选择25个主题</span>
			<span id="format_prompt">主题必须以字母或数字开头，可以包含连字符 (-)，并且长度不得超过35个字符</span>
		</div>
		
		
		

		<div class="ui segments repository-summary shadow-0 is-lang-stats">
	<div class="ui segment sub-menu repository-menu">
		<div class="ui two horizontal center link list">
			
				<div class="item">
					<a class="ui" href="/chuqiuyu/gao/commits/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f"><i class="iconfont icon-commit"></i> <b>3533</b> 提交</a>
				</div>
			
			
				<div class="item">
					<a class="ui" href="/chuqiuyu/gao/branches/"><i class="iconfont icon-branch-down"></i> <b>2</b> 分支</a>
				</div>
				<div class="item">
					<span class="ui"><i class="iconfont icon-memory"></i> <b id="RepoSize">185 MB</b></span>
				</div>
			
		</div>
	</div>
	
	<div class="ui segment sub-menu language-stats-details" style="display: none">
		<div class="ui horizontal center link list">
			
			<div class="item">
				<span class="ui">
				<i class="color-icon" style="background-color: #f1e05a"></i>
				<b>
					JavaScript
				
				</b> 98.2%</span>
			</div>
			
			<div class="item">
				<span class="ui">
				<i class="color-icon" style="background-color: #3572A5"></i>
				<b>
					Python
				
				</b> 1.8%</span>
			</div>
			
		</div>
	</div>
	<a class="ui segment language-stats">
		
		<div class="bar" style="width: 98.2%; background-color: #f1e05a">&nbsp;</div>
		
		<div class="bar" style="width: 1.8%; background-color: #3572A5">&nbsp;</div>
		
	</a>
	
</div>

		<div class="ui stackable secondary menu mobile--margin-between-items mobile--no-negative-margins">
			<div class="fitted item choose reference">
	<div class="ui floating filter dropdown custom" data-can-create-branch="false" data-no-results="未找到结果">
		<div id="branchSelect" class="ui basic small compact button" data-mode="branches" @click="menuVisible = !menuVisible" @keyup.enter="menuVisible = !menuVisible">
			<span class="text">
				<i class="iconfont icon-branch-down"></i>
				目录树:
				<strong>fd599aefbb</strong>
			</span>
			<i class="dropdown icon"></i>
		</div>
		<div class="data" style="display: none" data-mode="branches">
			
				<div class="item branch " data-url="/chuqiuyu/gao/src/branch/master/lib/alist.min.js">master</div>
			
				<div class="item branch " data-url="/chuqiuyu/gao/src/branch/gaotianliuyun-patch-1/lib/alist.min.js">gaotianliuyun-patch-1</div>
			
			
		</div>
		<div class="menu transition" :class="{visible: menuVisible}" v-if="menuVisible" v-cloak>
			<div class="ui icon search input">
				<i class="filter icon"></i>
				<input name="search" ref="searchField" v-model="searchTerm" @keydown="keydown($event)" placeholder="过滤分支或标签...">
			</div>
			<div class="header branch-tag-choice">
				<div class="ui grid">
					<div class="two column row">
						<a class="reference column" href="#" @click="mode = 'branches'; focusSearchField()">
							<span class="text" :class="{black: mode !== 'branches'}">
								<i class="iconfont icon-branch-down"></i> 分支列表
							</span>
						</a>
						<a class="reference column" href="#" @click="mode = 'tags'; focusSearchField()">
							<span class="text" :class="{black: mode !== 'tags'}">
								<i class="reference tags icon"></i> 标签列表
							</span>
						</a>
					</div>
				</div>
			</div>
			<div class="scrolling menu" ref="scrollContainer">
				<div v-for="(item, index) in filteredItems" :key="item.name" class="item" :class="{selected: item.selected, active: active == index}" @click="selectItem(item)" :ref="'listItem' + index">${ item.name }</div>
				<div class="item" v-if="showCreateNewBranch" :class="{active: active == filteredItems.length}" :ref="'listItem' + filteredItems.length">
					<a href="#" @click="createNewBranch()">
						<div>
							<i class="iconfont icon-branch-down"></i>
							创建分支 <strong>${ searchTerm }</strong>
						</div>
						<div class="text small">
							
								从 &#39;fd599aefbb&#39;
							
						</div>
					</a>
					<form ref="newBranchForm" action="/chuqiuyu/gao/branches/_new/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f" method="post">
						<input type="hidden" name="_csrf" value="i0awkC9Bsw5Fd2BzPCblIieMVYA6MTY4MzA3ODQ2NzIyMDU3ODU5Nw">
						<input type="hidden" name="new_branch_name" v-model="searchTerm">
					</form>
				</div>
			</div>
			<div class="message" v-if="showNoResults">${ noResults }</div>
		</div>
	</div>
</div>

			
			
			
			
				<div class="fitted item">
					<span class="ui breadcrumb repo-path">
						<a class="section" href="/chuqiuyu/gao/src/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f" title="gao">gao</a>
						
							<span class="divider">/</span>
							
								<span class="section">
									<a href="/chuqiuyu/gao/src/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f/lib" title="lib">lib</a></span>
						
							<span class="divider">/</span>
							
								<span class="active section" title="alist.min.js">alist.min.js</span>
							
						</span></div>
			
			<div class="right fitted item" id="file-buttons">
				<div>
					

					
					
				</div>
			</div>

			<div class="fitted item">
				
				
			</div>
		</div>
		
			<div class="tab-size-8 non-diff-file-content">
	<h4 class="file-header ui top attached header">
		<div class="file-header-left df ac">
			
				<div class="file-info text grey normal mono">
					
					
						<div class="file-info-entry">
							1 行
						</div>
					
					
						<div class="file-info-entry">
							17 KB
						</div>
					
					
				</div>
			
		</div>
		
		<div class="file-header-right df ac">
			<div class="ui right file-actions">
				<div class="ui buttons">
					<a class="ui button" href="/chuqiuyu/gao/raw/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f/lib/alist.min.js">原始文件</a>
					
					
						<a class="ui button" href="/chuqiuyu/gao/blame/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f/lib/alist.min.js">Blame</a>
					
					<a class="ui button" href="/chuqiuyu/gao/commits/commit/fd599aefbb199f48ea6cf73c3414629c1c02e50f/lib/alist.min.js">文件历史</a>
				</div>
				
			</div>
		</div>
		
	</h4>
	<div class="ui attached table unstackable segment">
		<div class="file-view code-view">
			
				
				<table>
					<tbody>
						
						<tr>
							<td id="L1" class="lines-num">
								<span id="L1" data-line-number="1"></span>
							</td>
							<td rel="L1" class="lines-code chroma">
								<code><span class="kr">import</span><span class="p">{</span><span class="nx">distance</span><span class="p">}</span><span class="nx">from</span><span class="s2">&#34;./mod.js&#34;</span><span class="p">;</span><span class="kr">import</span><span class="p">{</span><span class="nx">sortListByCN</span><span class="p">}</span><span class="nx">from</span><span class="s2">&#34;./sortName.js&#34;</span><span class="p">;</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">rstrip</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">chars</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">regex</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">chars</span><span class="o">+</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">regex</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="kd">var</span> <span class="nx">showMode</span><span class="o">=</span><span class="s2">&#34;single&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">searchDriver</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">limit_search_show</span><span class="o">=</span><span class="mi">200</span><span class="p">;</span><span class="kd">var</span> <span class="nx">search_type</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">detail_order</span><span class="o">=</span><span class="s2">&#34;name&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">playRaw</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kr">const</span> <span class="nx">request_timeout</span><span class="o">=</span><span class="mi">5</span><span class="nx">e3</span><span class="p">;</span><span class="kr">const</span> <span class="nx">VERSION</span><span class="o">=</span><span class="s2">&#34;alist v2/v3 20221223&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">UA</span><span class="o">=</span><span class="s2">&#34;Mozilla/5.0&#34;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">print</span><span class="p">(</span><span class="nx">any</span><span class="p">)</span><span class="p">{</span><span class="nx">any</span><span class="o">=</span><span class="nx">any</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">any</span><span class="o">==</span><span class="s2">&#34;object&#34;</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">any</span><span class="p">)</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">any</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">any</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">any</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">any</span><span class="o">+</span><span class="s2">&#34;:&#34;</span><span class="o">+</span><span class="nx">any</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">any</span><span class="o">==</span><span class="s2">&#34;object&#34;</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">any</span><span class="p">)</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;null object&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">any</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getHome</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">tmp</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;//&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">url</span><span class="o">=</span><span class="nx">tmp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&#34;//&#34;</span><span class="o">+</span><span class="nx">tmp</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="k">return</span> <span class="nx">url</span><span class="p">}</span><span class="kr">const</span> <span class="nx">http</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">method</span><span class="o">===</span><span class="s2">&#34;POST&#34;</span><span class="o">&amp;&amp;</span><span class="nx">options</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="p">{</span><span class="nx">options</span><span class="p">.</span><span class="nx">body</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="p">{</span><span class="s2">&#34;content-type&#34;</span><span class="o">:</span><span class="s2">&#34;application/json&#34;</span><span class="p">}</span><span class="p">,</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">}</span><span class="nx">options</span><span class="p">.</span><span class="nx">timeout</span><span class="o">=</span><span class="nx">request_timeout</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">{</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">keys</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;referer&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;Referer&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">getHome</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;user-agent&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;User-Agent&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">UA</span><span class="p">}</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kr">const</span> <span class="nx">res</span><span class="o">=</span><span class="nx">req</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">options</span><span class="p">)</span><span class="p">;</span><span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="o">=</span><span class="p">(</span><span class="p">)</span><span class="p">=&gt;</span><span class="nx">res</span><span class="o">&amp;&amp;</span><span class="nx">res</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">content</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">res</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="p">(</span><span class="p">)</span><span class="p">=&gt;</span><span class="nx">res</span><span class="o">&amp;&amp;</span><span class="nx">res</span><span class="p">.</span><span class="nx">content</span><span class="o">?</span><span class="nx">res</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">return</span> <span class="nx">res</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">{</span><span class="nx">json</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="p">,</span><span class="nx">text</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">;</span><span class="p">[</span><span class="s2">&#34;get&#34;</span><span class="p">,</span><span class="s2">&#34;post&#34;</span><span class="p">]</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">method</span><span class="p">=&gt;</span><span class="p">{</span><span class="nx">http</span><span class="p">[</span><span class="nx">method</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">http</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">options</span><span class="p">,</span><span class="p">{</span><span class="nx">method</span><span class="o">:</span><span class="nx">method</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">__drives</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="kd">function</span> <span class="nx">isMedia</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="sr">/\.(dff|dsf|mp3|aac|wav|wma|cda|flac|m4a|mid|mka|mp2|mpa|mpc|ape|ofr|ogg|ra|wv|tta|ac3|dts|tak|webm|wmv|mpeg|mov|ram|swf|mp4|avi|rm|rmvb|flv|mpg|mkv|m3u8|ts|3gp|asf)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">file</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">get_drives_path</span><span class="p">(</span><span class="nx">tid</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">index</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">name</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">index</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">path</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">index</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">drives</span><span class="o">:</span><span class="nx">get_drives</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span><span class="p">,</span><span class="nx">path</span><span class="o">:</span><span class="nx">path</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">get_drives</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span><span class="p">{</span><span class="nx">settings</span><span class="p">,</span><span class="nx">api</span><span class="p">,</span><span class="nx">server</span><span class="p">,</span><span class="nx">headers</span><span class="p">}</span><span class="o">=</span><span class="nx">__drives</span><span class="p">[</span><span class="nx">name</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="p">{</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kr">const</span> <span class="nx">data</span><span class="o">=</span><span class="nx">http</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">server</span><span class="o">+</span><span class="s2">&#34;/api/public/settings&#34;</span><span class="p">,</span><span class="p">{</span><span class="nx">headers</span><span class="o">:</span><span class="nx">headers</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">settings</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">x</span><span class="p">=&gt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">key</span><span class="o">===</span><span class="s2">&#34;title&#34;</span><span class="p">)</span><span class="o">?</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">settings</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">x</span><span class="p">=&gt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">key</span><span class="o">===</span><span class="s2">&#34;version&#34;</span><span class="p">)</span><span class="o">?</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">settings</span><span class="p">.</span><span class="nx">enableSearch</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">x</span><span class="p">=&gt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">key</span><span class="o">===</span><span class="s2">&#34;enable search&#34;</span><span class="p">)</span><span class="o">?</span><span class="p">.</span><span class="nx">value</span><span class="o">===</span><span class="s2">&#34;true&#34;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">settings</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">settings</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">version</span><span class="p">;</span><span class="nx">settings</span><span class="p">.</span><span class="nx">enableSearch</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="nx">api</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">?</span><span class="s2">&#34;/api/fs/list&#34;</span><span class="o">:</span><span class="s2">&#34;/api/public/path&#34;</span><span class="p">;</span><span class="nx">api</span><span class="p">.</span><span class="nx">file</span><span class="o">=</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">?</span><span class="s2">&#34;/api/fs/get&#34;</span><span class="o">:</span><span class="s2">&#34;/api/public/path&#34;</span><span class="p">;</span><span class="nx">api</span><span class="p">.</span><span class="nx">search</span><span class="o">=</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">?</span><span class="s2">&#34;/api/public/search&#34;</span><span class="o">:</span><span class="s2">&#34;/api/public/search&#34;</span><span class="p">}</span><span class="k">return</span> <span class="nx">__drives</span><span class="p">[</span><span class="nx">name</span><span class="p">]</span><span class="p">}</span><span class="kd">function</span> <span class="nx">init</span><span class="p">(</span><span class="nx">ext</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;当前版本号:&#34;</span><span class="o">+</span><span class="nx">VERSION</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">data</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ext</span><span class="o">==</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">data</span><span class="o">=</span><span class="nx">ext</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;alist ext:object&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ext</span><span class="o">==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ext</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">alist_data</span><span class="o">=</span><span class="nx">ext</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">alist_data_url</span><span class="o">=</span><span class="nx">alist_data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="nx">limit_search_show</span><span class="o">=</span><span class="nx">alist_data</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nb">Number</span><span class="p">(</span><span class="nx">alist_data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="o">||</span><span class="nx">limit_search_show</span><span class="o">:</span><span class="nx">limit_search_show</span><span class="p">;</span><span class="nx">search_type</span><span class="o">=</span><span class="nx">alist_data</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="nx">alist_data</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">:</span><span class="nx">search_type</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="nx">alist_data_url</span><span class="p">)</span><span class="p">;</span><span class="nx">data</span><span class="o">=</span><span class="nx">http</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">alist_data_url</span><span class="p">)</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;alist ext:json string&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">data</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">ext</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">drives</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;server&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;name&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">drives</span><span class="o">=</span><span class="nx">data</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">data</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;drives&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">drives</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">drives</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">drives</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">it</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&#34;alist&#34;</span><span class="o">||</span><span class="o">!</span><span class="nx">it</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="nx">drives</span><span class="p">)</span><span class="p">;</span><span class="nx">searchDriver</span><span class="o">=</span><span class="p">(</span><span class="nx">drives</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">x</span><span class="p">=&gt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">search</span><span class="p">)</span><span class="o">||</span><span class="p">{</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">searchDriver</span><span class="o">&amp;&amp;</span><span class="nx">drives</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="nx">searchDriver</span><span class="o">=</span><span class="nx">drives</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="nx">searchDriver</span><span class="p">)</span><span class="p">;</span><span class="nx">drives</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">item</span><span class="p">=&gt;</span><span class="p">{</span><span class="kd">let</span> <span class="nx">_path_param</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span><span class="p">{</span><span class="nx">_path_param</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span><span class="p">;</span><span class="nx">_path_param</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="p">=&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">password</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">pwdObj</span><span class="o">=</span><span class="p">{</span><span class="nx">password</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">password</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">item</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span><span class="p">{</span><span class="nx">item</span><span class="p">.</span><span class="nx">params</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;/&#34;</span><span class="o">:</span><span class="nx">pwdObj</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">item</span><span class="p">.</span><span class="nx">params</span><span class="p">[</span><span class="s2">&#34;/&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">pwdObj</span><span class="p">}</span><span class="nx">_path_param</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">}</span><span class="nx">__drives</span><span class="p">[</span><span class="nx">item</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">server</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">server</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">item</span><span class="p">.</span><span class="nx">server</span><span class="p">.</span><span class="nx">rstrip</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">server</span><span class="p">,</span><span class="nx">startPage</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">startPage</span><span class="o">||</span><span class="s2">&#34;/&#34;</span><span class="p">,</span><span class="nx">showAll</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">showAll</span><span class="o">===</span><span class="kc">true</span><span class="p">,</span><span class="nx">search</span><span class="o">:</span><span class="o">!</span><span class="o">!</span><span class="nx">item</span><span class="p">.</span><span class="nx">search</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">params</span><span class="o">||</span><span class="p">{</span><span class="p">}</span><span class="p">,</span><span class="nx">_path_param</span><span class="o">:</span><span class="nx">_path_param</span><span class="p">,</span><span class="nx">settings</span><span class="o">:</span><span class="p">{</span><span class="p">}</span><span class="p">,</span><span class="nx">api</span><span class="o">:</span><span class="p">{</span><span class="p">}</span><span class="p">,</span><span class="nx">headers</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">headers</span><span class="o">||</span><span class="p">{</span><span class="p">}</span><span class="p">,</span><span class="nx">getParams</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">key</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_path_param</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">x</span><span class="p">=&gt;</span><span class="nx">path</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="p">{</span><span class="p">}</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">,</span><span class="p">{</span><span class="nx">path</span><span class="o">:</span><span class="nx">path</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">,</span><span class="nx">getPath</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">res</span><span class="o">=</span><span class="nx">http</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">server</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">api</span><span class="p">.</span><span class="nx">path</span><span class="p">,</span><span class="p">{</span><span class="nx">data</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">getParams</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span><span class="p">,</span><span class="nx">headers</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">?</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">content</span><span class="o">:</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">files</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">getPath发生错误:</span><span class="si">${</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&#34;error&#34;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span><span class="p">}</span><span class="p">]</span><span class="p">}</span><span class="p">}</span><span class="p">,</span><span class="nx">getFile</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">raw_url</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">server</span><span class="o">+</span><span class="s2">&#34;/d&#34;</span><span class="o">+</span><span class="nx">path</span><span class="p">;</span><span class="nx">raw_url</span><span class="o">=</span><span class="nb">encodeURI</span><span class="p">(</span><span class="nx">raw_url</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">data</span><span class="o">=</span><span class="p">{</span><span class="nx">raw_url</span><span class="o">:</span><span class="nx">raw_url</span><span class="p">,</span><span class="nx">raw_url1</span><span class="o">:</span><span class="nx">raw_url</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">playRaw</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kr">const</span> <span class="nx">res</span><span class="o">=</span><span class="nx">http</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">server</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">api</span><span class="p">.</span><span class="nx">file</span><span class="p">,</span><span class="p">{</span><span class="nx">data</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">getParams</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span><span class="p">,</span><span class="nx">headers</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">data</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">?</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="o">:</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="p">)</span><span class="p">{</span><span class="nx">data</span><span class="p">.</span><span class="nx">raw_url</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">url</span><span class="p">}</span><span class="nx">data</span><span class="p">.</span><span class="nx">raw_url1</span><span class="o">=</span><span class="nx">raw_url</span><span class="p">;</span><span class="k">return</span> <span class="nx">data</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">data</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">data</span><span class="p">}</span><span class="p">}</span><span class="p">,</span><span class="nx">isFolder</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">1</span><span class="p">}</span><span class="p">,</span><span class="nx">isVideo</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">?</span><span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">2</span><span class="o">||</span><span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">3</span><span class="o">:</span><span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">3</span><span class="o">||</span><span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">4</span><span class="p">}</span><span class="p">,</span><span class="nx">is_subt</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kr">const</span> <span class="nx">ext</span><span class="o">=</span><span class="sr">/\.(srt|ass|scc|stl|ttml)$/</span><span class="p">;</span><span class="k">return</span> <span class="nx">ext</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="p">}</span><span class="p">,</span><span class="nx">getPic</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">pic</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">v3</span><span class="o">?</span><span class="nx">data</span><span class="p">.</span><span class="nx">thumb</span><span class="o">:</span><span class="nx">data</span><span class="p">.</span><span class="nx">thumbnail</span><span class="p">;</span><span class="k">return</span> <span class="nx">pic</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isFolder</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="o">?</span><span class="s2">&#34;http://img1.3png.com/281e284a670865a71d91515866552b5f172b.png&#34;</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">}</span><span class="p">,</span><span class="nx">getTime</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span><span class="nx">isStandard</span><span class="p">)</span><span class="p">{</span><span class="nx">isStandard</span><span class="o">=</span><span class="nx">isStandard</span><span class="o">||</span><span class="kc">false</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">tTime</span><span class="o">=</span><span class="nx">data</span><span class="p">.</span><span class="nx">updated_at</span><span class="o">||</span><span class="nx">data</span><span class="p">.</span><span class="nx">time_str</span><span class="o">||</span><span class="nx">data</span><span class="p">.</span><span class="nx">modified</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">date</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">tTime</span><span class="p">)</span><span class="p">{</span><span class="nx">tTime</span><span class="o">=</span><span class="nx">tTime</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;T&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">date</span><span class="o">=</span><span class="nx">tTime</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">isStandard</span><span class="p">)</span><span class="p">{</span><span class="nx">date</span><span class="o">=</span><span class="nx">date</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">,</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">}</span><span class="nx">tTime</span><span class="o">=</span><span class="nx">tTime</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/Z|\./</span><span class="p">)</span><span class="p">;</span><span class="nx">date</span><span class="o">+=</span><span class="s2">&#34; &#34;</span><span class="o">+</span><span class="nx">tTime</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">}</span><span class="k">return</span> <span class="nx">date</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;init执行完毕&#34;</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">home</span><span class="p">(</span><span class="nx">filter</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">classes</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">__drives</span><span class="p">)</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">key</span><span class="p">=&gt;</span><span class="p">(</span><span class="p">{</span><span class="nx">type_id</span><span class="o">:</span><span class="sb">`</span><span class="si">${</span><span class="nx">key</span><span class="si">}</span><span class="sb">$</span><span class="si">${</span><span class="nx">__drives</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">.</span><span class="nx">startPage</span><span class="si">}</span><span class="sb">`</span><span class="p">,</span><span class="nx">type_name</span><span class="o">:</span><span class="nx">key</span><span class="p">,</span><span class="nx">type_flag</span><span class="o">:</span><span class="s2">&#34;1&#34;</span><span class="p">}</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">filter_dict</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">filters</span><span class="o">=</span><span class="p">[</span><span class="p">{</span><span class="nx">key</span><span class="o">:</span><span class="s2">&#34;order&#34;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&#34;排序&#34;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="p">[</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;名称⬆️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_name_asc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;名称⬇️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_name_desc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;中英⬆️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_cn_asc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;中英⬇️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_cn_desc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;时间⬆️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_time_asc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;时间⬇️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_time_desc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;大小⬆️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_size_asc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;大小⬇️&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;vod_size_desc&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;无&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;none&#34;</span><span class="p">}</span><span class="p">]</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">key</span><span class="o">:</span><span class="s2">&#34;show&#34;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&#34;播放展示&#34;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="p">[</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;单集&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;single&#34;</span><span class="p">}</span><span class="p">,</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="s2">&#34;全集&#34;</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="s2">&#34;all&#34;</span><span class="p">}</span><span class="p">]</span><span class="p">}</span><span class="p">]</span><span class="p">;</span><span class="nx">classes</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="nx">filter_dict</span><span class="p">[</span><span class="nx">it</span><span class="p">.</span><span class="nx">type_id</span><span class="p">]</span><span class="o">=</span><span class="nx">filters</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;----home----&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="nx">classes</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="kr">class</span><span class="o">:</span><span class="nx">classes</span><span class="p">,</span><span class="nx">filters</span><span class="o">:</span><span class="nx">filter_dict</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">homeVod</span><span class="p">(</span><span class="nx">params</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">_post_data</span><span class="o">=</span><span class="p">{</span><span class="nx">pageNum</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">pageSize</span><span class="o">:</span><span class="mi">100</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">_post_url</span><span class="o">=</span><span class="s2">&#34;https://pbaccess.video.qq.com/trpc.videosearch.hot_rank.HotRankServantHttp/HotRankHttp&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">data</span><span class="o">=</span><span class="nx">http</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="nx">_post_url</span><span class="p">,</span><span class="p">{</span><span class="nx">data</span><span class="o">:</span><span class="nx">_post_data</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">_list</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">data</span><span class="o">=</span><span class="nx">data</span><span class="p">[</span><span class="s2">&#34;data&#34;</span><span class="p">]</span><span class="p">[</span><span class="s2">&#34;navItemList&#34;</span><span class="p">]</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">[</span><span class="s2">&#34;hotRankResult&#34;</span><span class="p">]</span><span class="p">[</span><span class="s2">&#34;rankItemList&#34;</span><span class="p">]</span><span class="p">;</span><span class="nx">data</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="nx">_list</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">it</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">vod_id</span><span class="o">:</span><span class="s2">&#34;msearch:&#34;</span><span class="o">+</span><span class="nx">it</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="s2">&#34;https://avatars.githubusercontent.com/u/97389433?s=120&amp;v=4&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">it</span><span class="p">.</span><span class="nx">changeOrder</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;Alist获取首页推荐发送错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="nx">_list</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">category</span><span class="p">(</span><span class="nx">tid</span><span class="p">,</span><span class="nx">pg</span><span class="p">,</span><span class="nx">filter</span><span class="p">,</span><span class="nx">extend</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">orid</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/#all#|#search#/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span><span class="p">{</span><span class="nx">drives</span><span class="p">,</span><span class="nx">path</span><span class="p">}</span><span class="o">=</span><span class="nx">get_drives_path</span><span class="p">(</span><span class="nx">orid</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">id</span><span class="o">=</span><span class="nx">orid</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">orid</span><span class="o">:</span><span class="nx">orid</span><span class="o">+</span><span class="s2">&#34;/&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">list</span><span class="o">=</span><span class="nx">drives</span><span class="p">.</span><span class="nx">getPath</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">subList</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vodFiles</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">allList</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">fl</span><span class="o">=</span><span class="nx">filter</span><span class="o">?</span><span class="nx">extend</span><span class="o">:</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">fl</span><span class="p">.</span><span class="nx">show</span><span class="p">)</span><span class="p">{</span><span class="nx">showMode</span><span class="o">=</span><span class="nx">fl</span><span class="p">.</span><span class="nx">show</span><span class="p">}</span><span class="nx">list</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">item</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">name</span><span class="o">!==</span><span class="s2">&#34;error&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">drives</span><span class="p">.</span><span class="nx">is_subt</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">subList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">drives</span><span class="p">.</span><span class="nx">showAll</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">drives</span><span class="p">.</span><span class="nx">isFolder</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">drives</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod_time</span><span class="o">=</span><span class="nx">drives</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_size</span><span class="o">=</span><span class="nx">get_size</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">size</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">remark</span><span class="o">=</span><span class="nx">vod_time</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34; &#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;\t&#34;</span><span class="o">+</span><span class="nx">vod_size</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_id</span><span class="o">=</span><span class="nx">id</span><span class="o">+</span><span class="nx">item</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="p">(</span><span class="nx">drives</span><span class="p">.</span><span class="nx">isFolder</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="o">?</span><span class="s2">&#34;/&#34;</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">showMode</span><span class="o">===</span><span class="s2">&#34;all&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">+=</span><span class="s2">&#34;#all#&#34;</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="nx">vod_id</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">vod_id</span><span class="p">,</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">getPic</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="p">,</span><span class="nx">vod_time</span><span class="o">:</span><span class="nx">vod_time</span><span class="p">,</span><span class="nx">vod_size</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">vod_tag</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">isFolder</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="o">?</span><span class="s2">&#34;folder&#34;</span><span class="o">:</span><span class="s2">&#34;file&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">isFolder</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="o">?</span><span class="nx">remark</span><span class="o">+</span><span class="s2">&#34; 文件夹&#34;</span><span class="o">:</span><span class="nx">remark</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">drives</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">vodFiles</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">}</span><span class="nx">allList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">item</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">vod_id</span><span class="o">:</span><span class="s2">&#34;no_data&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="s2">&#34;不要点,会崩的&#34;</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="s2">&#34;https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/404.jpg&#34;</span><span class="p">}</span><span class="p">;</span><span class="nx">allList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">vodFiles</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">subList</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">sub</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">subList</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="nx">sub</span><span class="o">=</span><span class="nx">subList</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">let</span> <span class="nx">subs</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">subList</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">subs</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="p">=&gt;</span><span class="p">{</span><span class="kd">let</span> <span class="nx">a_similar</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;chs&#34;</span><span class="p">)</span><span class="o">?</span><span class="mi">100</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">levenshteinDistance</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">vodFiles</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">vod_name</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">b_similar</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;chs&#34;</span><span class="p">)</span><span class="o">?</span><span class="mi">100</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">levenshteinDistance</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">vodFiles</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">vod_name</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a_similar</span><span class="o">&gt;</span><span class="nx">b_similar</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="mi">1</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="nx">sub</span><span class="o">=</span><span class="nx">subs</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">}</span><span class="nx">vodFiles</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">vod_id</span><span class="o">+=</span><span class="s2">&#34;@@@&#34;</span><span class="o">+</span><span class="nx">sub</span><span class="p">;</span><span class="nx">vodFiles</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">vod_remarks</span><span class="o">+=</span><span class="s2">&#34;🏷️&#34;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">vodFiles</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">item</span><span class="p">=&gt;</span><span class="p">{</span><span class="kr">const</span> <span class="nx">lh</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">let</span> <span class="nx">sub</span><span class="p">;</span><span class="nx">subList</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">s</span><span class="p">=&gt;</span><span class="p">{</span><span class="kr">const</span> <span class="nx">l</span><span class="o">=</span><span class="nx">levenshteinDistance</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">item</span><span class="p">.</span><span class="nx">vod_name</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&gt;</span><span class="mi">60</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">lh</span><span class="p">)</span><span class="p">{</span><span class="nx">sub</span><span class="o">=</span><span class="nx">s</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">sub</span><span class="p">)</span><span class="p">{</span><span class="nx">item</span><span class="p">.</span><span class="nx">vod_id</span><span class="o">+=</span><span class="s2">&#34;@@@&#34;</span><span class="o">+</span><span class="nx">sub</span><span class="p">;</span><span class="nx">item</span><span class="p">.</span><span class="nx">vod_remarks</span><span class="o">+=</span><span class="s2">&#34;🏷️&#34;</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">fl</span><span class="p">.</span><span class="nx">order</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">key</span><span class="o">=</span><span class="nx">fl</span><span class="p">.</span><span class="nx">order</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;_&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;_&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">order</span><span class="o">=</span><span class="nx">fl</span><span class="p">.</span><span class="nx">order</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;_&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">排序key:</span><span class="si">${</span><span class="nx">key</span><span class="si">}</span><span class="sb">,排序order:</span><span class="si">${</span><span class="nx">order</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">key</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;name&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">detail_order</span><span class="o">=</span><span class="s2">&#34;name&#34;</span><span class="p">;</span><span class="nx">allList</span><span class="o">=</span><span class="nx">sortListByName</span><span class="p">(</span><span class="nx">allList</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="nx">order</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">key</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;cn&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">detail_order</span><span class="o">=</span><span class="s2">&#34;cn&#34;</span><span class="p">;</span><span class="nx">allList</span><span class="o">=</span><span class="nx">sortListByCN</span><span class="p">(</span><span class="nx">allList</span><span class="p">,</span><span class="s2">&#34;vod_name&#34;</span><span class="p">,</span><span class="nx">order</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">key</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;time&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">detail_order</span><span class="o">=</span><span class="s2">&#34;time&#34;</span><span class="p">;</span><span class="nx">allList</span><span class="o">=</span><span class="nx">sortListByTime</span><span class="p">(</span><span class="nx">allList</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="nx">order</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">key</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;size&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">detail_order</span><span class="o">=</span><span class="s2">&#34;size&#34;</span><span class="p">;</span><span class="nx">allList</span><span class="o">=</span><span class="nx">sortListBySize</span><span class="p">(</span><span class="nx">allList</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="nx">order</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">fl</span><span class="p">.</span><span class="nx">order</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;none&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">detail_order</span><span class="o">=</span><span class="s2">&#34;none&#34;</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;不排序&#34;</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">detail_order</span><span class="o">!==</span><span class="s2">&#34;none&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">allList</span><span class="o">=</span><span class="nx">sortListByName</span><span class="p">(</span><span class="nx">allList</span><span class="p">,</span><span class="s2">&#34;vod_name&#34;</span><span class="p">,</span><span class="s2">&#34;asc&#34;</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;----category----&#34;</span><span class="o">+</span><span class="sb">`</span><span class="sb">tid:</span><span class="si">${</span><span class="nx">tid</span><span class="si">}</span><span class="sb">,detail_order:</span><span class="si">${</span><span class="nx">detail_order</span><span class="si">}</span><span class="sb">,showMode:</span><span class="si">${</span><span class="nx">showMode</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">page</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">pagecount</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">limit</span><span class="o">:</span><span class="nx">allList</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="nx">allList</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">list</span><span class="o">:</span><span class="nx">allList</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getAll</span><span class="p">(</span><span class="nx">otid</span><span class="p">,</span><span class="nx">tid</span><span class="p">,</span><span class="nx">drives</span><span class="p">,</span><span class="nx">path</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kr">const</span> <span class="nx">content</span><span class="o">=</span><span class="nx">category</span><span class="p">(</span><span class="nx">tid</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">isFile</span><span class="o">=</span><span class="nx">isMedia</span><span class="p">(</span><span class="nx">otid</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/#all#|#search#/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;@@@&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span><span class="p">{</span><span class="nx">list</span><span class="p">}</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">content</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_play_url</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="nx">list</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">x</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">vod_tag</span><span class="o">===</span><span class="s2">&#34;file&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">vid</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">vod_id</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/#all#|#search#/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">vod_play_url</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="sb">`</span><span class="si">${</span><span class="nx">x</span><span class="p">.</span><span class="nx">vod_name</span><span class="si">}</span><span class="sb">$</span><span class="si">${</span><span class="nx">vid</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">vid</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">pl</span><span class="o">=</span><span class="nx">path</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_name</span><span class="o">=</span><span class="nx">pl</span><span class="p">[</span><span class="nx">pl</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">drives</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">vod_name</span><span class="o">===</span><span class="nx">drives</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="nx">pl</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">otid</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;#search#&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">+=</span><span class="s2">&#34;[搜]&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">otid</span><span class="p">,</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">vod_name</span><span class="p">,</span><span class="nx">type_name</span><span class="o">:</span><span class="s2">&#34;文件夹&#34;</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="s2">&#34;https://avatars.githubusercontent.com/u/97389433?s=120&amp;v=4&#34;</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="nx">tid</span><span class="p">,</span><span class="nx">vod_tag</span><span class="o">:</span><span class="s2">&#34;folder&#34;</span><span class="p">,</span><span class="nx">vod_play_from</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">vod_play_url</span><span class="o">:</span><span class="nx">vod_play_url</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;----detail1----&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="p">[</span><span class="nx">vod</span><span class="p">]</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">list</span><span class="o">=</span><span class="p">[</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">:</span><span class="s2">&#34;无数据,防无限请求&#34;</span><span class="p">,</span><span class="nx">type_name</span><span class="o">:</span><span class="s2">&#34;文件夹&#34;</span><span class="p">,</span><span class="nx">vod_id</span><span class="o">:</span><span class="s2">&#34;no_data&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="s2">&#34;不要点,会崩的&#34;</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="s2">&#34;https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/static/img/404.jpg&#34;</span><span class="p">,</span><span class="nx">vod_actor</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span><span class="nx">vod_director</span><span class="o">:</span><span class="nx">tid</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="nx">otid</span><span class="p">}</span><span class="p">]</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="nx">list</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">detail</span><span class="p">(</span><span class="nx">tid</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">isSearch</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;#search#&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">isAll</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;#all#&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">otid</span><span class="o">=</span><span class="nx">tid</span><span class="p">;</span><span class="nx">tid</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/#all#|#search#/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">isFile</span><span class="o">=</span><span class="nx">isMedia</span><span class="p">(</span><span class="nx">tid</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;@@@&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">isFile:</span><span class="si">${</span><span class="nx">tid</span><span class="si">}</span><span class="sb">?</span><span class="si">${</span><span class="nx">isFile</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span><span class="p">{</span><span class="nx">drives</span><span class="p">,</span><span class="nx">path</span><span class="p">}</span><span class="o">=</span><span class="nx">get_drives_path</span><span class="p">(</span><span class="nx">tid</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">drives:</span><span class="si">${</span><span class="nx">drives</span><span class="si">}</span><span class="sb">,path:</span><span class="si">${</span><span class="nx">path</span><span class="si">}</span><span class="sb">,</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">path</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">getAll</span><span class="p">(</span><span class="nx">otid</span><span class="p">,</span><span class="nx">tid</span><span class="p">,</span><span class="nx">drives</span><span class="p">,</span><span class="nx">path</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">isSearch</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">isFile</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">getAll</span><span class="p">(</span><span class="nx">otid</span><span class="p">,</span><span class="nx">tid</span><span class="p">,</span><span class="nx">drives</span><span class="p">,</span><span class="nx">path</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">isAll</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">new_tid</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">isFile</span><span class="p">)</span><span class="p">{</span><span class="nx">new_tid</span><span class="o">=</span><span class="nx">tid</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;/&#34;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">new_tid</span><span class="o">=</span><span class="nx">tid</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">全集模式 tid:</span><span class="si">${</span><span class="nx">tid</span><span class="si">}</span><span class="sb">=&gt;tid:</span><span class="si">${</span><span class="nx">new_tid</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span><span class="p">{</span><span class="nx">drives</span><span class="p">,</span><span class="nx">path</span><span class="p">}</span><span class="o">=</span><span class="nx">get_drives_path</span><span class="p">(</span><span class="nx">new_tid</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">getAll</span><span class="p">(</span><span class="nx">otid</span><span class="p">,</span><span class="nx">new_tid</span><span class="p">,</span><span class="nx">drives</span><span class="p">,</span><span class="nx">path</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">isFile</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">paths</span><span class="o">=</span><span class="nx">path</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;@@@&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_name</span><span class="o">=</span><span class="nx">paths</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">paths</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_title</span><span class="o">=</span><span class="nx">vod_name</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">otid</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;#search#&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">vod_title</span><span class="o">+=</span><span class="s2">&#34;[搜]&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">otid</span><span class="p">,</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">vod_title</span><span class="p">,</span><span class="nx">type_name</span><span class="o">:</span><span class="s2">&#34;文件&#34;</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="s2">&#34;https://avatars.githubusercontent.com/u/97389433?s=120&amp;v=4&#34;</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="nx">tid</span><span class="p">,</span><span class="nx">vod_play_from</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">vod_play_url</span><span class="o">:</span><span class="nx">vod_name</span><span class="o">+</span><span class="s2">&#34;$&#34;</span><span class="o">+</span><span class="nx">path</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;----detail2----&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="p">[</span><span class="nx">vod</span><span class="p">]</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="p">[</span><span class="p">]</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">play</span><span class="p">(</span><span class="nx">flag</span><span class="p">,</span><span class="nx">id</span><span class="p">,</span><span class="nx">flags</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">drives</span><span class="o">=</span><span class="nx">get_drives</span><span class="p">(</span><span class="nx">flag</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">urls</span><span class="o">=</span><span class="nx">id</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;@@@&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">parse</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">playUrl</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">drives</span><span class="p">.</span><span class="nx">getFile</span><span class="p">(</span><span class="nx">urls</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">raw_url</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">urls</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">path</span><span class="o">=</span><span class="nx">urls</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">urls</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">subt</span><span class="o">=</span><span class="nx">drives</span><span class="p">.</span><span class="nx">getFile</span><span class="p">(</span><span class="nx">path</span><span class="o">+</span><span class="nx">urls</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">raw_url1</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;----play----&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">search</span><span class="p">(</span><span class="nx">wd</span><span class="p">,</span><span class="nx">quick</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="nx">__drives</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;可搜索的alist驱动:&#34;</span><span class="o">+</span><span class="nx">searchDriver</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">searchDriver</span><span class="o">||</span><span class="o">!</span><span class="nx">wd</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="p">[</span><span class="p">]</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">let</span> <span class="nx">driver</span><span class="o">=</span><span class="nx">__drives</span><span class="p">[</span><span class="nx">searchDriver</span><span class="p">]</span><span class="p">;</span><span class="nx">wd</span><span class="o">=</span><span class="nx">wd</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34; &#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;+&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="nx">driver</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">surl</span><span class="o">=</span><span class="nx">driver</span><span class="p">.</span><span class="nx">server</span><span class="o">+</span><span class="s2">&#34;/search?box=&#34;</span><span class="o">+</span><span class="nx">wd</span><span class="o">+</span><span class="s2">&#34;&amp;url=&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">search_type</span><span class="p">)</span><span class="p">{</span><span class="nx">surl</span><span class="o">+=</span><span class="s2">&#34;&amp;type=&#34;</span><span class="o">+</span><span class="nx">search_type</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;搜索链接:&#34;</span><span class="o">+</span><span class="nx">surl</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">http</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">surl</span><span class="p">)</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">lists</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">lists</span><span class="o">=</span><span class="nx">pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="s2">&#34;div&amp;&amp;ul&amp;&amp;a&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">搜索结果数:</span><span class="si">${</span><span class="nx">lists</span><span class="p">.</span><span class="nx">length</span><span class="si">}</span><span class="sb">,搜索结果显示数量限制:</span><span class="si">${</span><span class="nx">limit_search_show</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vods</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">excludeReg</span><span class="o">=</span><span class="sr">/\.(pdf|epub|mobi|txt|doc|lrc)$/</span><span class="p">;</span><span class="kd">let</span> <span class="nx">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">lists</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="kd">let</span> <span class="nx">vhref</span><span class="o">=</span><span class="nx">pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="s2">&#34;a&amp;&amp;href&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">vhref</span><span class="p">)</span><span class="p">{</span><span class="nx">vhref</span><span class="o">=</span><span class="nx">unescape</span><span class="p">(</span><span class="nx">vhref</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">excludeReg</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">vhref</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">cnt</span><span class="o">&lt;</span><span class="nx">limit_search_show</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="nx">vhref</span><span class="p">)</span><span class="p">}</span><span class="nx">cnt</span><span class="o">++</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vid</span><span class="o">=</span><span class="nx">searchDriver</span><span class="o">+</span><span class="s2">&#34;$&#34;</span><span class="o">+</span><span class="nx">vhref</span><span class="o">+</span><span class="s2">&#34;#search#&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">showMode</span><span class="o">===</span><span class="s2">&#34;all&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">vid</span><span class="o">+=</span><span class="s2">&#34;#all#&#34;</span><span class="p">}</span><span class="nx">vods</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="s2">&#34;a&amp;&amp;Text&#34;</span><span class="p">)</span><span class="p">,</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">vid</span><span class="p">,</span><span class="nx">vod_tag</span><span class="o">:</span><span class="nx">isMedia</span><span class="p">(</span><span class="nx">vhref</span><span class="p">)</span><span class="o">?</span><span class="s2">&#34;file&#34;</span><span class="o">:</span><span class="s2">&#34;folder&#34;</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="s2">&#34;http://img1.3png.com/281e284a670865a71d91515866552b5f172b.png&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">searchDriver</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="nx">vods</span><span class="o">=</span><span class="nx">vods</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">limit_search_show</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="nx">vods</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="nx">vods</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">get_size</span><span class="p">(</span><span class="nx">sz</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">sz</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">filesize</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">sz</span><span class="o">&gt;</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">)</span><span class="p">{</span><span class="nx">sz</span><span class="o">/=</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">;</span><span class="nx">filesize</span><span class="o">=</span><span class="s2">&#34;TB&#34;</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">sz</span><span class="o">&gt;</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">)</span><span class="p">{</span><span class="nx">sz</span><span class="o">/=</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">;</span><span class="nx">filesize</span><span class="o">=</span><span class="s2">&#34;GB&#34;</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">sz</span><span class="o">&gt;</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">)</span><span class="p">{</span><span class="nx">sz</span><span class="o">/=</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">;</span><span class="nx">filesize</span><span class="o">=</span><span class="s2">&#34;MB&#34;</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">sz</span><span class="o">&gt;</span><span class="mi">1024</span><span class="p">)</span><span class="p">{</span><span class="nx">sz</span><span class="o">/=</span><span class="mi">1024</span><span class="p">;</span><span class="nx">filesize</span><span class="o">=</span><span class="s2">&#34;KB&#34;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">filesize</span><span class="o">=</span><span class="s2">&#34;B&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">sizeStr</span><span class="o">=</span><span class="nx">sz</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nx">filesize</span><span class="p">,</span><span class="nx">index</span><span class="o">=</span><span class="nx">sizeStr</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;.&#34;</span><span class="p">)</span><span class="p">,</span><span class="nx">dou</span><span class="o">=</span><span class="nx">sizeStr</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">index</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">dou</span><span class="o">===</span><span class="s2">&#34;00&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">sizeStr</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">index</span><span class="p">)</span><span class="o">+</span><span class="nx">sizeStr</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">index</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">sizeStr</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">levenshteinDistance</span><span class="p">(</span><span class="nx">str1</span><span class="p">,</span><span class="nx">str2</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="mi">100</span><span class="o">-</span><span class="mi">100</span><span class="o">*</span><span class="nx">distance</span><span class="p">(</span><span class="nx">str1</span><span class="p">,</span><span class="nx">str2</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">str1</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">str2</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">naturalSort</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">options</span><span class="p">)</span><span class="p">{</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">key</span><span class="p">)</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">options</span><span class="p">.</span><span class="nx">key</span><span class="p">]</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">options</span><span class="p">.</span><span class="nx">key</span><span class="p">]</span><span class="p">}</span><span class="kd">var</span> <span class="nx">EQUAL</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">GREATER</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">order</span><span class="o">===</span><span class="s2">&#34;desc&#34;</span><span class="o">?</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">SMALLER</span><span class="o">=</span><span class="o">-</span><span class="nx">GREATER</span><span class="p">;</span><span class="kd">var</span> <span class="nx">re</span><span class="o">=</span><span class="sr">/(^-?[0-9]+(\.?[0-9]*)[df]?e?[0-9]?$|^0x[0-9a-f]+$|[0-9]+)/gi</span><span class="p">;</span><span class="kd">var</span> <span class="nx">sre</span><span class="o">=</span><span class="sr">/(^[ ]*|[ ]*$)/g</span><span class="p">;</span><span class="kd">var</span> <span class="nx">dre</span><span class="o">=</span><span class="sr">/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/</span><span class="p">;</span><span class="kd">var</span> <span class="nx">hre</span><span class="o">=</span><span class="sr">/^0x[0-9a-f]+$/i</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ore</span><span class="o">=</span><span class="sr">/^0/</span><span class="p">;</span><span class="kd">var</span> <span class="nx">normalize</span><span class="o">=</span><span class="kd">function</span> <span class="nx">normalize</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">string</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="o">+</span><span class="nx">value</span><span class="p">;</span><span class="k">return</span> <span class="nx">options</span><span class="p">.</span><span class="nx">caseSensitive</span><span class="o">?</span><span class="nx">string</span><span class="o">:</span><span class="nx">string</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">normalize</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">sre</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">normalize</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">sre</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">xN</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">re</span><span class="p">,</span><span class="s2">&#34;\0$1\0&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\0$/</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\0/</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;\0&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">yN</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">re</span><span class="p">,</span><span class="s2">&#34;\0$1\0&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\0$/</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\0/</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;\0&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">y</span><span class="p">)</span><span class="k">return</span> <span class="nx">EQUAL</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">)</span><span class="k">return</span> <span class="nx">GREATER</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">y</span><span class="p">)</span><span class="k">return</span> <span class="nx">SMALLER</span><span class="p">;</span><span class="kd">var</span> <span class="nx">xD</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">hre</span><span class="p">)</span><span class="p">)</span><span class="o">||</span><span class="nx">xN</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">dre</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">yD</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">hre</span><span class="p">)</span><span class="p">)</span><span class="o">||</span><span class="nx">xD</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">dre</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">oFxNcL</span><span class="p">,</span><span class="nx">oFyNcL</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">yD</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">xD</span><span class="o">&lt;</span><span class="nx">yD</span><span class="p">)</span><span class="k">return</span> <span class="nx">SMALLER</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">xD</span><span class="o">&gt;</span><span class="nx">yD</span><span class="p">)</span><span class="k">return</span> <span class="nx">GREATER</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">cLoc</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">numS</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">xN</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">yN</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">;</span><span class="nx">cLoc</span><span class="o">&lt;</span><span class="nx">numS</span><span class="p">;</span><span class="nx">cLoc</span><span class="o">++</span><span class="p">)</span><span class="p">{</span><span class="nx">oFxNcL</span><span class="o">=</span><span class="o">!</span><span class="p">(</span><span class="nx">xN</span><span class="p">[</span><span class="nx">cLoc</span><span class="p">]</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">ore</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">xN</span><span class="p">[</span><span class="nx">cLoc</span><span class="p">]</span><span class="p">)</span><span class="o">||</span><span class="nx">xN</span><span class="p">[</span><span class="nx">cLoc</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">oFyNcL</span><span class="o">=</span><span class="o">!</span><span class="p">(</span><span class="nx">yN</span><span class="p">[</span><span class="nx">cLoc</span><span class="p">]</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">ore</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">yN</span><span class="p">[</span><span class="nx">cLoc</span><span class="p">]</span><span class="p">)</span><span class="o">||</span><span class="nx">yN</span><span class="p">[</span><span class="nx">cLoc</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">oFxNcL</span><span class="p">)</span><span class="o">!==</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">oFyNcL</span><span class="p">)</span><span class="p">)</span><span class="k">return</span> <span class="nb">isNaN</span><span class="p">(</span><span class="nx">oFxNcL</span><span class="p">)</span><span class="o">?</span><span class="nx">GREATER</span><span class="o">:</span><span class="nx">SMALLER</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">oFxNcL</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">oFyNcL</span><span class="p">)</span><span class="p">{</span><span class="nx">oFxNcL</span><span class="o">+=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">oFyNcL</span><span class="o">+=</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">oFxNcL</span><span class="o">&lt;</span><span class="nx">oFyNcL</span><span class="p">)</span><span class="k">return</span> <span class="nx">SMALLER</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">oFxNcL</span><span class="o">&gt;</span><span class="nx">oFyNcL</span><span class="p">)</span><span class="k">return</span> <span class="nx">GREATER</span><span class="p">}</span><span class="k">return</span> <span class="nx">EQUAL</span><span class="p">}</span><span class="p">}</span><span class="kr">const</span> <span class="nx">sortListByName</span><span class="o">=</span><span class="p">(</span><span class="nx">vodList</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="nx">order</span><span class="p">)</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">key</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">vodList</span><span class="p">}</span><span class="nx">order</span><span class="o">=</span><span class="nx">order</span><span class="o">||</span><span class="s2">&#34;asc&#34;</span><span class="p">;</span><span class="k">return</span> <span class="nx">vodList</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">naturalSort</span><span class="p">(</span><span class="p">{</span><span class="nx">key</span><span class="o">:</span><span class="nx">key</span><span class="p">,</span><span class="nx">order</span><span class="o">:</span><span class="nx">order</span><span class="p">,</span><span class="nx">caseSensitive</span><span class="o">:</span><span class="kc">true</span><span class="p">}</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="kr">const</span> <span class="nx">getTimeInt</span><span class="o">=</span><span class="nx">timeStr</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">timeStr</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="kr">const</span> <span class="nx">sortListByTime</span><span class="o">=</span><span class="p">(</span><span class="nx">vodList</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="nx">order</span><span class="p">)</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">key</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">vodList</span><span class="p">}</span><span class="kd">let</span> <span class="nx">ASCarr</span><span class="o">=</span><span class="nx">vodList</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="p">=&gt;</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">;</span><span class="k">return</span> <span class="nx">getTimeInt</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">-</span><span class="nx">getTimeInt</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">order</span><span class="o">===</span><span class="s2">&#34;desc&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">ASCarr</span><span class="p">.</span><span class="nx">reverse</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">ASCarr</span><span class="p">}</span><span class="p">;</span><span class="kr">const</span> <span class="nx">sortListBySize</span><span class="o">=</span><span class="p">(</span><span class="nx">vodList</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="nx">order</span><span class="p">)</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">key</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">vodList</span><span class="p">}</span><span class="kd">let</span> <span class="nx">ASCarr</span><span class="o">=</span><span class="nx">vodList</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="p">=&gt;</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">order</span><span class="o">===</span><span class="s2">&#34;desc&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">ASCarr</span><span class="p">.</span><span class="nx">reverse</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">ASCarr</span><span class="p">}</span><span class="p">;</span><span class="kr">export</span> <span class="k">default</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="nx">init</span><span class="p">,</span><span class="nx">home</span><span class="o">:</span><span class="nx">home</span><span class="p">,</span><span class="nx">homeVod</span><span class="o">:</span><span class="nx">homeVod</span><span class="p">,</span><span class="nx">category</span><span class="o">:</span><span class="nx">category</span><span class="p">,</span><span class="nx">detail</span><span class="o">:</span><span class="nx">detail</span><span class="p">,</span><span class="nx">play</span><span class="o">:</span><span class="nx">play</span><span class="p">,</span><span class="nx">search</span><span class="o">:</span><span class="nx">search</span><span class="p">}</span><span class="p">;</span>
</code>
							</td>
						</tr>
						
					</tbody>
				</table>
				
			
		</div>
	</div>
</div>


	<div class="i-text-center">
		
				
		
	</div>


<script>
function submitDeleteForm() {
    var message = prompt("delete_confirm_message\n\ndelete_commit_summary", "Delete ''");
    if (message != null) {
        $("#delete-message").val(message);
        $("#delete-file-form").submit()
    }
}
</script>

		
	</div>
	<div id="toListModel">
		<div class="ui modal" id="toShare">
			<i class="close icon black"></i>
			<div class="header">共享</div>
			<div class="content">
				<form autocomplete="off" class="ui form training ignore-dirty">
					
					<div class="fields">
						<p class="px-sm py-none mb-sm">共享页面将在匿名链接下呈现所选的代码和训练结果，不会显示项目的原始链接地址。但Agit系统不会自动处理代码和训练结果，因此如果需要为匿名盲审等场景提供匿名内容，还需要您自行保证代码内容和训练结果的匿名化。</p>
					</div>

					<div class="fields">
						<div class="two wide field required">
							<label>代码分支</label>
						</div>
						<div id="branchField" class="fourteen wide field">

							<div class="fitted item choose">
								<div class="ui floating filter dropdown custom">

									<div class="ui basic small compact button" style="min-width: 200px;" @click="menuVisible = !menuVisible">
										<span class="text">
											<i class="iconfont icon-branch-down"></i>
											<span v-text='isViewBranch?"分支":"目录树"'></span>:
                      <strong v-text='isViewBranch?(selectedBranch?selectedBranch:"请选择"):(selectedTag?selectedTag:"请选择")'></strong>
										</span>
										<i class="dropdown icon" tabIndex="-1"></i>
									</div>

									<div tabindex="-1"  id="scrolling" class="menu transition menu-share" :class="{visible: menuVisible}" v-show="menuVisible" @blur="menuVisible = false">

										<div class="ui icon search input" style="width: 200px;">
											<i class="filter icon"></i>
											<input name="search" v-model="searchTerm" @keydown="keydown($event)" placeholder="过滤分支或标签...">
										</div>

										<div class="header branch-tag-choice">
											<div class="ui grid">
												<div class="two column row">
													<a class="reference column" href="javascript:;" @click="handleBranchTab(true)">
														<span class="text" :class="{black: !isViewBranch}">
															<i class="iconfont icon-branch-down"></i>
															分支列表
														</span>
													</a>
													<a class="reference column" href="javascript:;" @click="handleBranchTab(false)">
														<span class="text" :class="{black: isViewBranch}">
															<i class="reference tags icon"></i>
															标签列表
														</span>
													</a>
												</div>
											</div>
										</div>

										<div v-show="isViewBranch" class="scrolling menu" ref="scrollContainer">
											<div v-for="(item, index) in branches" v-show="item.name.includes(searchTerm)" :key="item.name" class="item" @click="handleBranchOrTag(item)">
												<span v-text="item.name"></span>
											</div>
										</div>
										<div v-show="!isViewBranch" class="scrolling menu" ref="scrollContainer">
											<div v-for="(item, index) in tags" v-show="item.name.includes(searchTerm)" :key="item.name" class="item" @click="handleBranchOrTag(item)">
												<span v-text="item.name"></span>
											</div>
										</div>

										<div class="message" v-if="(isViewBranch && branches.length==0) || (!isViewBranch && tags.length==0)">未找到结果</div>
									</div>

									<div class="ui pointing red basic label" style="display:none;">
										请选择分支或标签
									</div>

								</div>
							</div>
						</div>
					</div>

					<div class="fields" v-show="selectedBranch">
						<div class="two wide field">
							<label>提交</label>
						</div>
						<div id="commitWrap" class="fourteen wide field">
							<select class="ui search selection dropdown commit-wrap" name="commit">
								<option value=""></option>
							</select>
						</div>
					</div>
					<div class="fields">
						<label class="two wide field  required">共享标题</label>
						<div class="fourteen wide field trainName-filed">
							<input v-model="shareName" type="text" name="shareName"  class="form-trainName" :maxlength="16"  placeholder="请输入标题内容，最多16个字符">
						</div>
					</div>
					<div class="ui grid uioption">
						<label class="required">链接有效期</label>
					</div>
					<div class="ui grid fields">
						<div class="thirteen wide column">
							<div class="ui four item stackable tabs menu ui-link-bg">
								<a v-for="(item, index) in shareTimeList" :key="index" :class="['item', activeIdx === item.shareTimeId ? 'active' : '']" data-tab="oneday" @click="handleMenuChange(item)">
									<span v-text="formatLinkTime(item.shareTimeName)"></span></a>
							</div>
						</div>
						<div class="right aligned three wide column action mt-3xs">
							<button class="ui primary button" @click="handleLink">
								生成链接</button>
						</div>
					</div>
				</form>
			</div>
		</div>
		<div class="ui modal" id="toCopyShareLink">
			<i class="close icon black"></i>
			<div class="header">共享链接已生成</div>
			<div class="content ui form">
				<div class="fields">
					<div class="two wide field">
						<label>链接地址:</label>
					</div>
					<div  class="fourteen wide field">
						<p v-text="linkAddress" id="share_url"></p>
					</div>
				</div>
				<div class="fields uioption">
					<div class="two wide field">
					<label>链接有效期:</label>
					</div>
					<div class="fourteen wide field">
						<p v-text="linkExDate"></p>
					</div>
				</div>
				<div class="fields uioption">
							<div class="sixteen wide field" style="text-align: right">
								<button class="ui basic icon button poping primary up clipboard share-button" id="share-button" data-original="复制链接" data-success="已复制链接" data-error="请按下 ⌘-C 或 Ctrl-C 复制" data-content="复制链接" data-variation="inverted tiny"  data-clipboard-target="#share_url">
									复制
								</button>
							</div>
				</div>

			</div>
		</div>
	</div>

</div>
<div class="content">
	<p></p>
</div>
</div>
</div>




		

		</div>

		

		<footer>
	<div class="base-footer-content i-footer mx-auto">
		<div class="ui left">
			<div class="p-logo i-flex i-align-center">
				<img class="logo-icon" src="/img/logo/logo.svg">
				<i class="logo-text">&copy; 2023 Agit Cloud Computing, Ltd.</i>
				<a  id="version-a" style="margin-right: 16px; text-decoration: underline; font-size: 12px;" target="_blank" href="https://agit.ai/AgitDeveloper/AgitPythonExamples/wiki"></a>
			</div>
		</div>
		<div class="ui right links p-logo">
			<a style="margin-right: 16px; text-decoration: underline; font-size: 12px;" target="_blank" href="/agreement/terms">服务协议</a>
<a style="margin-right: 16px; text-decoration: underline; font-size: 12px;" target="_blank" href="/agreement/privacy">隐私政策</a>
<a style="text-decoration: underline; font-size: 12px; margin-right: 16px;" target="_blank" href="/opensource">开源软件</a>
<a style="text-decoration: underline; font-size: 12px;" target="_blank" id="help-a" target="_blank" href="http://help.agit.ai/">帮助</a>

		</div>
	</div>
</footer>



		

		
		
		
		<script src="/js/index.js?v=220846678a86246c9d7e7c46c21f20c2"></script>

		<script src="/vendor/plugins/vue/vue.min.js"></script>
<script src="/minifyjs/head_navbar.base.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/minifyjs/footer_content.base.js?v=220846678a86246c9d7e7c46c21f20c2"></script>


<script src="/vendor/plugins/promise-polyfill/polyfill.min.js"></script>
<script src="/vendor/plugins/cssrelpreload/loadCSS.min.js"></script>
<script src="/vendor/plugins/cssrelpreload/cssrelpreload.min.js"></script>
<script src="/vendor/plugins/vue-infinite-loading/vue-infinite-loading.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/vendor/plugins/Qrcode/qrcode.min.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/vendor/plugins/i-components/i.components.min.js?v=220846678a86246c9d7e7c46c21f20c2"></script>

<script src="/vendor/plugins/vue-node-spec/node-spec.min.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/vendor/plugins/jquery-migrate/jquery-migrate.min.js?v=3.0.1"></script>
<script src="/vendor/plugins/jquery.areyousure/jquery.are-you-sure.js"></script>
<script src="/vendor/plugins/emojify/emojify.custom.js"></script>
<script src="/vendor/plugins/xterm/xterm.js"></script>









	</body>
	</html>

<script>
$("#createTraining").click(function(){

	$api.trainReachUpperLimit({repoId:Number($('.repo-id').text())}).then(data => {
        if (!data) return;
		if(data.isUpperLimit){
			$ITools.handleToast('error', $i18n.tr('code', 'trainCountLimit'))
			return
		}

		const mode = $("#branchSelect").attr("data-mode"),
	      	branch = $("#branchSelect").find("strong").text();
		let path = ""
		$(".repo-path a").each(function(index,item){
			if(index === 0){
				return
			}
			path += path === ""?$(this).attr("title"):("/"+$(this).attr("title"))
		})
		const params={
			scriptPath: $(".repo-path").find(".active.section").attr("title"),
			workSpace: path,
			branchName: mode === "branches" ? branch : "",
			tagName: mode === "branches" ? "" : branch
		}
		window.location.href = window.location.origin + $('.repo-url').text() + '/training/create?scriptFile=' + escapePound(JSON.stringify(params))
      })


})
function toUpload(el) {

const tempSplit = $("#RepoSize").text().split("GB")


if (tempSplit.length === 2 && tempSplit[0] >= 1) {
	$ITools.handleToast('error', $i18n.tr('valid', 'fileSizeLimit'))
	return
}
window.location.href = $(el).attr("data-href")
}
function handleShare() {
$('#toShare').modal('show')
}
function shareLink() {
$('#toCopyShareLink').modal('show')
}
function escapePound(str){
	let res=""
	res=str.replaceAll("%","%25")
	res=res.replaceAll("#","%23")
	res=res.replaceAll(" ","%20")
	res=res.replaceAll("?","%3F")
	return res
}
</script>

<script src="/minifyjs/auth.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/minifyjs/repo_home.js?v=220846678a86246c9d7e7c46c21f20c2"></script>

